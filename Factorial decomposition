function isPrime(num) {
  if (num <= 1) return false;
  if (num <= 3) return true;

  if (num % 2 === 0 || num % 3 === 0) return false;

  let i = 5;
  while (i * i <= num) {
    if (num % i === 0 || num % (i + 2) === 0) return false;
    i += 6;
  }

  return true;
}

function decomp(n) {
  const primes = [];
  const factors = {};

  function countFactors(num, prime) {
    let count = 0;
    while (num > 0) {
      num = Math.floor(num / prime);
      count += num;
    }
    return count;
  }

  for (let i = 2; i <= n; i++) {
    if (isPrime(i)) {
      primes.push(i);
      factors[i] = countFactors(n, i);
    }
  }

  const result = primes.map(prime => {
    if (factors[prime] === 1) {
      return `${prime} * `;
    } else {
      return `${prime}^${factors[prime]} * `;
    }
  }).join('')
  .trim();

  return result.slice(0, -2); // Remove the trailing " *"
}
